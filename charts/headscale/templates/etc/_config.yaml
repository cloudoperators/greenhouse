# SPDX-FileCopyrightText: 2024 SAP SE or an SAP affiliate company and Greenhouse contributors
# SPDX-License-Identifier: Apache-2.0

server_url: http://{{ required ".Values.ingress.host missing" .Values.ingress.host }}
listen_addr: "0.0.0.0:{{ required ".Values.server.service.http.port missing" .Values.server.service.http.port }}"
metrics_listen_addr: "127.0.0.1:{{ required ".Values.server.service.metrics.port missing" .Values.server.service.metrics.port }}"
ephemeral_node_inactivity_timeout: "30m"
acl_policy_path: /etc/headscale/acl.policy
private_key_path: /var/lib/headscale/private.key
noise:
  private_key_path: /var/lib/headscale/noise_private.key

grpc_listen_addr: "0.0.0.0:{{ required ".Values.server.service.grpc.port missing" .Values.server.service.grpc.port }}"
grpc_allow_insecure: {{ .Values.grpc.insecure }}

dns_config:
  base_domain: {{ required ".Values.ingress.host missing" .Values.ingress.host }}
  magic_dns: false
  override_local_dns: true
  {{- if and .Values.dnsConfig .Values.dnsConfig.nameservers }}
  nameservers:
  {{- toYaml .Values.dnsConfig.nameservers | nindent 4 }}
  {{ end }}
  {{- if and .Values.dnsConfig .Values.dnsConfig.restrictedNameservers }}
  restricted_nameservers:
  {{- toYaml .Values.dnsConfig.restrictedNameservers | nindent 4 }}
  {{ end }}

  # Search domains to inject.
  domains: [sap,sap.corp,svc,svc.cluster.local,cluster.local]

# headscale needs a list of DERP servers that can be presented
# to the clients.
derp:
  server:
    # If enabled, runs the embedded DERP server and merges it into the rest of the DERP config
    # The Headscale server_url defined above MUST be using https, DERP requires TLS to be in place
    enabled: false

    # Region ID to use for the embedded DERP server.
    # The local DERP prevails if the region ID collides with other region ID coming from
    # the regular DERP config.
    region_id: 999

    # Region code and name are displayed in the Tailscale UI to identify a DERP region
    region_code: "headscale"
    region_name: "Headscale Embedded DERP"

    # Listens over UDP at the configured address for STUN connections - to help with NAT traversal.
    # When the embedded DERP server is enabled stun_listen_addr MUST be defined.
    #
    # For more details on how this works, check this great article: https://tailscale.com/blog/how-tailscale-works/
    stun_listen_addr: "0.0.0.0:3478"

  # List of externally available DERP maps encoded in JSON
  # urls:
  #   - https://controlplane.tailscale.com/derpmap/default

  # Locally available DERP map files encoded in YAML
  #
  # This option is mostly interesting for people hosting
  # their own DERP servers:
  # https://tailscale.com/kb/1118/custom-derp-servers/
  #
  # paths:
  #   - /etc/headscale/derp-example.yaml
  paths:
    - /etc/headscale/derp.yaml

  # If enabled, a worker will be set up to periodically
  # refresh the given sources and update the derpmap
  # will be set up.
  auto_update_enabled: true

  # How often should we check for DERP updates?
  update_frequency: 24h

# List of IP prefixes to allocate tailaddresses from.
# Each prefix consists of either an IPv4 or IPv6 address,
# and the associated prefix length, delimited by a slash.
# It must be within IP ranges supported by the Tailscale
# client - i.e., subnets of 100.64.0.0/10 and fd7a:115c:a1e0::/48.
# See below:
# IPv6: https://github.com/tailscale/tailscale/blob/22ebb25e833264f58d7c3f534a8b166894a89536/net/tsaddr/tsaddr.go#LL81C52-L81C71
# IPv4: https://github.com/tailscale/tailscale/blob/22ebb25e833264f58d7c3f534a8b166894a89536/net/tsaddr/tsaddr.go#L33
# Any other range is NOT supported, and it will cause unexpected issues.
ip_prefixes:
  - {{ required ".Values.clientSubnet missing" .Values.clientSubnet | quote }}
# Period to check for node updates within the tailnet. A value too low will severely affect
# CPU consumption of Headscale. A value too high (over 60s) will cause problems
# for the nodes, as they won't get updates or keep alive messages frequently enough.
# In case of doubts, do not touch the default 10s.
node_update_check_interval: 10s

## Use already defined certificates:
#tls_cert_path: /certs/tls.crt
#tls_key_path: /certs/tls.key

log:
  # Output formatting for logs: text or json
  format: text
  level: info

# Enabling this option makes devices prefer a random port for WireGuard traffic over the
# default static port 41641. This option is intended as a workaround for some buggy
# firewall devices. See https://tailscale.com/kb/1181/firewalls/ for more information.
randomize_client_port: false

# DB values.
db_type: postgres
db_name: headscale
db_host: "{{ include "postgres.fullname" . }}.{{ .Release.Namespace }}.svc.cluster.local"
db_port: {{ required ".Values.postgres.service.port missing" .Values.postgres.service.port }}
db_user: {{ required ".Values.postgres.username missing" .Values.postgres.username }}
# FIXME: This should be injected via DB_PASS environment variable.
db_pass: {{ required ".Values.postgres.password missing" .Values.postgres.password }}

{{ if .Values.oidc.enabled -}}
oidc:
  issuer: {{ required ".Values.oidc.issuer missing" .Values.oidc.issuer }}
  client_id: {{ required ".Values.oidc.clientID missing" .Values.oidc.clientID }}
  client_secret_path: /vol/secret/oidc_client_secret
  {{ if .Values.oidc.allowedGroups -}}
  allowed_groups:
    {{- toYaml .Values.oidc.allowedGroups | nindent 4 -}}
  {{ end }}
{{ end }}
