apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "postgres.fullname" . }}
  labels:
    {{- include "postgres.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "postgres.fullname" . }}
  replicas: 1
  selector:
    matchLabels:
      {{- include "postgres.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "postgres.labels" . | nindent 8 }}
    spec:
      containers:
        - name: postgres
          image: "{{ required ".Values.postgres.image.repository missing" .Values.postgres.image.repository }}:{{ required ".Values.postgres.image.tag missing" .Values.postgres.image.tag }}"
          imagePullPolicy: {{ required ".Values.postgres.image.pullPolicy missing" .Values.postgres.image.pullPolicy }}
          env:
            - name: PGDATA
              value: /headscale/postgresql/data/pgdata
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "headscale.fullname" . }}
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_USER
              value: {{ required ".Values.postgres.username missing" .Values.postgres.username }}
          ports:
            - name: postgres
              protocol: TCP
              containerPort: 5432
          livenessProbe:
            tcpSocket:
              port: 5432
            initialDelaySeconds: 30
            timeoutSeconds: 5
            periodSeconds: 15
          volumeMounts:
            - name: {{ include "postgres.fullname" . }}
              mountPath: /headscale/postgresql
              subPath: data
  volumeClaimTemplates:
    - metadata:
        name: {{ include "postgres.fullname" . }}
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: {{ required ".Values.postgres.pvc.storage missing" .Values.postgres.pvc.storage }}
