# SPDX-FileCopyrightText: 2024 SAP SE or an SAP affiliate company and Greenhouse contributors
# SPDX-License-Identifier: Apache-2.0

{{- $fullName := include "headscale.fullname" . -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "headscale.fullname" . }}
  labels:
    {{- include "headscale.labels" . | nindent 4 }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "headscale.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/configmap: {{ include (print $.Template.BasePath "/etc/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
      labels:
        {{- include "headscale.labels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "headscale.fullname" . }}
      initContainers:
        - name: wait-for-postgres
          image: "{{ required ".Values.postgres.image.repository missing" .Values.postgres.image.repository }}:{{ required ".Values.postgres.image.tag missing" .Values.postgres.image.tag }}"
          command:
          - sh
          - -c
          - "until pg_isready; do echo waiting for database; sleep 2; done;"
          env:
            - name: PGHOST
              value: "{{ include "postgres.fullname" . }}.{{ .Release.Namespace }}.svc.cluster.local"
            - name: PGPORT
              value: {{ required ".Values.postgres.service.port missing" .Values.postgres.service.port | quote }}
            - name: PGDATABASE
              value: headscale
            - name: PGUSER
              value: {{ required ".Values.postgres.username missing" .Values.postgres.username }}
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "headscale.fullname" . }}
                  key: POSTGRES_PASSWORD
      containers:
        - name: headscale
          image: "{{ required ".Values.server.image.repository missing" .Values.server.image.repository }}:{{ .Chart.AppVersion }}"
          imagePullPolicy: {{ required ".Values.server.image.pullPolicy missing" .Values.server.image.pullPolicy }}
          command: ["headscale", "serve"]
          env:
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ include "headscale.fullname" . }}
                  key: POSTGRES_PASSWORD
          ports:
            {{- range $name, $v := .Values.server.service }}
            - name: {{ $name }}
              protocol: TCP
              containerPort: {{ $v.port }}
            {{- end }}
          livenessProbe:
            tcpSocket:
              port: http
            initialDelaySeconds: 30
            timeoutSeconds: 5
            periodSeconds: 15
          volumeMounts:
            - name: config
              mountPath: /vol/config
            - name: secret
              mountPath: /vol/secret
            - name: config
              mountPath: /etc/headscale
            - name: data
              mountPath: /var/lib/headscale
            - name: socket
              mountPath: /var/run/headscale
        - name: headscale-ui
          image: "{{ required ".Values.ui.image.repository missing" .Values.ui.image.repository }}:{{ required ".Values.ui.image.tag missing" .Values.ui.image.tag }}"
          imagePullPolicy: {{ required ".Values.ui.image.pullPolicy missing" .Values.ui.image.pullPolicy }}
          ports:
            - name: http
              protocol: TCP
              containerPort: {{ required ".Values.ui.service.port missing" .Values.ui.service.port }}
        - name: headscalectl
          image: "{{ required ".Values.headscalectl.image.repository missing" .Values.headscalectl.image.repository }}:{{ required ".Values.headscalectl.image.tag missing" .Values.headscalectl.image.tag }}"
          imagePullPolicy: {{ required ".Values.headscalectl.image.pullPolicy missing" .Values.headscalectl.image.pullPolicy }}
          args:
          - apikey
          - create
          - --output
          - secret
          - --secret-name
          - {{ required ".Values.headscalectl.secret.name missing" .Values.headscalectl.secret.name }}
          - --secret-namespace
          - {{ .Release.Namespace }}
          - --socket
          - --socket-path
          - /tmp/headscale.sock
          volumeMounts:
            - name: socket
              mountPath: /tmp/
      volumes:
        - name: config
          configMap:
            name: {{ include "headscale.fullname" . }}-config
        - name: secret
          secret:
            secretName: {{ include "headscale.fullname" . }}
        - name: data
          persistentVolumeClaim:
            claimName: {{ include "headscale.fullname" . }}
        - name: socket
          emptyDir:
            medium: Memory
            sizeLimit: 10Mi
