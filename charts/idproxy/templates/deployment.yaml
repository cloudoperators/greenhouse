{{/* 
SPDX-FileCopyrightText: 2024 SAP SE or an SAP affiliate company and Greenhouse contributors
SPDX-License-Identifier: Apache-2.0
*/}}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "idproxy.fullname" . }}
  labels:
    {{- include "idproxy.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "idproxy.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "idproxy.selectorLabels" . | nindent 8 }}
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                topologyKey: "kubernetes.io/hostname"
                labelSelector:
                  matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values:
                    - {{ include "idproxy.name" . }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "idproxy.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - /idproxy
            - --issuer=https://{{include "idproxy.auth.hostname" $}}
            {{- range $origin := .Values.corsAllowedOrigins | default (list "*") }}
            - --allowed-origins={{ $origin }}
            {{- end }}
          env:
          {{- if eq .Values.global.dex.backend "postgres" }}
          - name: PG_DATABASE
            value: {{ .Values.global.dex.postgresql.postgresqlDatabase }}
          - name: PG_HOST
            value: {{ template "postgres.ServiceURL" . }}
          - name: PG_PORT
            value: {{ .Values.global.dex.postgresql.postgresqlPort }}
          - name: PG_USER
            value: {{ .Values.global.dex.postgresql.postgresqlUsername }}
          - name: PG_PASSWORD
            valueFrom:
              secretKeyRef:
                key: postgres-password
                name: {{ .Release.Name }}-pguser-{{ .Values.global.dex.postgresql.postgresqlUsername }}
          {{- end }}
          - name: FEATURE_FLAGS
            value: {{ template "featureFlag.fullname" . }}
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          ports:
            - name: oidc
              containerPort: 8080
              protocol: TCP
            - name: metrics
              containerPort: 6543
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
