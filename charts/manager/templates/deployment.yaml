{{/* 
SPDX-FileCopyrightText: 2024 SAP SE or an SAP affiliate company and Greenhouse contributors
SPDX-License-Identifier: Apache-2.0
*/}}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "manager.fullname" . }}-controller-manager
  namespace: greenhouse
  labels:
    app: greenhouse
  {{- include "manager.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.controllerManager.replicas }}
  selector:
    matchLabels:
      app: greenhouse
    {{- include "manager.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: greenhouse
      {{- include "manager.selectorLabels" . | nindent 8 }}
      annotations:
        kubectl.kubernetes.io/default-container: manager
        prometheus.io/scrape: "true"
    spec:
      containers:
      - command:
        - /greenhouse
        args:
        - --dns-domain={{ required ".Values.global.dnsDomain missing" .Values.global.dnsDomain }}
        {{- if gt (len .Values.controllerManager.args) 0 }}
        {{- include "manager.params" . | indent 8 }}
        {{- end }}
        env:
        - name: DEX_POSTGRES_DATABASE
          value: {{ .Values.postgresql.postgresqlDatabase }}
        - name: DEX_POSTGRES_HOST
          value: 
        - name: DEX_POSTGRES_USER
          value: {{ .Values.postgresql.postgresqlUsername }}
        - name: DEX_POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              key: postgres-password
              name: dex-postgres-pguser-dex
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: GOMEMLIMIT
          valueFrom:
            resourceFieldRef:
              containerName: manager
              divisor: "0"
              resource: limits.memory
        - name: GOMAXPROCS
          valueFrom:
            resourceFieldRef:
              containerName: manager
              divisor: "0"
              resource: limits.cpu
        image: {{ .Values.controllerManager.image.repository }}:{{ .Values.controllerManager.image.tag | default .Chart.AppVersion }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        - containerPort: 8080
          name: metrics
        - containerPort: 8081
          name: probes
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        securityContext: {{- toYaml .Values.controllerManager.containerSecurityContext | nindent 10 }}
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      securityContext:
        runAsNonRoot: true
      serviceAccountName: {{ include "manager.fullname" . }}-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: {{ include "manager.fullname" . }}-webhook-server-cert
