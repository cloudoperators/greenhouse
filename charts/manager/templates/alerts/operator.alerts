groups:
  - name: greenhouse-operator.rules
    rules:
    - alert: GreenhouseOperatorReconcileErrorsHigh
      annotations:
        description: '`{{`{{ $value | humanizePercentage }}`}}` of reconciling operations failed for `{{`{{ $labels.controller }}`}}` controller'
        summary: 'Errors while reconciling `{{`{{$labels.controller}}`}}`'
      expr: |
        (sum by (controller) (rate(controller_runtime_reconcile_errors_total{job="greenhouse-controller-manager-metrics-service"}[5m]))) / (sum by (controller) (rate(controller_runtime_reconcile_total{job="greenhouse-controller-manager-metrics-service"}[5m]))) > 0.1
      for: 15m
      labels:
        severity: warning
        service: greenhouse-controller-manager
        {{- if .Values.alerts.commonAlertLabels }}
        {{- range $k, $v := .Values.alerts.commonAlertLabels }}
        {{ $k }}: {{ $v | quote }}
        {{- end }}
        {{- end }}
    - alert: GreenhouseOperatorReconcileDurationHigher10Min
      annotations:
        description: "Greenhouse Operator reconciliation takes longer than (`{{`{{ $value | humanizeDuration }}`}}`)."
        summary: 'Reconcile duration higher than 10m while reconciling `{{`{{ $labels.controller }}`}}`'
      expr: |
        (sum by (controller) (rate(controller_runtime_reconcile_time_seconds_sum{service="greenhouse-controller-manager-metrics-service"}[5m]))) / (sum by (controller) (rate(controller_runtime_reconcile_time_seconds_count{service="greenhouse-controller-manager-metrics-service"}[5m]))) > 600
      for: 15m
      labels:
        severity: warning
        service: greenhouse-controller-manager
        {{- if .Values.alerts.commonAlertLabels }}
        {{- range $k, $v := .Values.alerts.commonAlertLabels }}
        {{ $k }}: {{ $v | quote }}
        {{- end }}
        {{- end }}
    - alert: GreenhouseOperatorWorkqueueNotDrained
      annotations:
        description:  The workqueue backlog of Greenhouse Operator controller - `{{`{{ $labels.name }}`}}` is not getting drained.
        summary: Greenhouse Operator controller - `{{`{{ $labels.name }}`}}`'s backlog is not being drained.
      expr: |
        sum by (name) (rate(workqueue_depth{job="greenhouse-controller-manager-metrics-service"}[5m])) > 0
      for: 15m
      labels:
        severity: warning
        service: greenhouse-controller-manager
        {{- if .Values.alerts.commonAlertLabels }}
        {{- range $k, $v := .Values.alerts.commonAlertLabels }}
        {{ $k }}: {{ $v | quote }}
        {{- end }}
        {{- end }}
  - name: greenhouse-webhooks.rules
    rules:
    - alert: GreenhouseWebhookLatencyHigh
      annotations:
        description: The 90th percentile latency of Greenhouse Operator webhook - `{{`{{ $labels.webhook }}`}}` is `{{`{{ $value | humanizeDuration }}`}}`
        summary: Greenhouse Operator webhook - `{{`{{ $labels.webhook }}`}}`'s latency is high.
      expr: |
        histogram_quantile(0.9, avg(rate(controller_runtime_webhook_latency_seconds_bucket{job="greenhouse-controller-manager-metrics-service"}[5m])) by (webhook, le)) > 0.2 
      for: 15m
      labels:
        severity: warning
        service: greenhouse-controller-manager
        {{- if .Values.alerts.commonAlertLabels }}
        {{- range $k, $v := .Values.alerts.commonAlertLabels }}
        {{ $k }}: {{ $v | quote }}
        {{- end }}
        {{- end }}
    - alert: GreenhouseWebhookErrorsHigh
      annotations:
        description: '`{{`{{ $value | humanizePercentage }}`}}` of webhook operations failed for `{{`{{ $labels.webhook }}`}}` webhook'
        summary: 'Errors while reconciling `{{`{{ $labels.webhook }}`}}`'
      expr: |
        (sum by (webhook) (rate(controller_runtime_webhook_requests_total{code!="200", job="greenhouse-controller-manager-metrics-service"}[5m]))) / (sum by (webhook) (rate(controller_runtime_webhook_requests_total{code="200", job="greenhouse-controller-manager-metrics-service"}[5m]))) > 0.1
      for: 15m
      labels:
        severity: warning
        service: greenhouse-controller-manager
        {{- if .Values.alerts.commonAlertLabels }}
        {{- range $k, $v := .Values.alerts.commonAlertLabels }}
        {{ $k }}: {{ $v | quote }}
        {{- end }}
        {{- end }}
  - name: greenhouse-team.rules
    rules:
    - alert: GreenhouseTeamMembershipCountDrop
      annotations:
        description: The number of members for team `{{`{{ $labels.teams }}`}}` in organization `{{`{{ $labels.namespace }}`}}` has dropped by more than 5 in the last 5 minutes.
        summary: Team members count drop detected
      expr: |
        sum by (namespace, team) (delta(greenhouse_teammembership_members_count{service="greenhouse-controller-manager-metrics-service"}[5m])) < -5
      for: 5m
      labels:
        severity: warning
        service: greenhouse
        {{- if .Values.alerts.commonAlertLabels }}
        {{- range $k, $v := .Values.alerts.commonAlertLabels }}
        {{ $k }}: {{ $v | quote }}
        {{- end }}
        {{- end }}
