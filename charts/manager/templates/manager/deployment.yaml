{{/*
SPDX-FileCopyrightText: 2024 SAP SE or an SAP affiliate company and Greenhouse contributors
SPDX-License-Identifier: Apache-2.0
*/}}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "manager.fullname" . }}-controller-manager
  namespace: greenhouse
  labels:
    app: greenhouse
  {{- include "manager.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.controllerManager.replicas }}
  selector:
    matchLabels:
      app: greenhouse
      app.kubernetes.io/component: "controller-manager"
  template:
    metadata:
      labels:
        app: greenhouse
        app.kubernetes.io/component: "controller-manager"
      annotations:
        kubectl.kubernetes.io/default-container: manager
        prometheus.io/scrape: "true"
    spec:
      containers:
        - command:
            - /greenhouse
          args:
            - --dns-domain={{ required ".Values.global.dnsDomain missing" .Values.global.dnsDomain }}
        {{- if gt (len .Values.controllerManager.args) 0 }}
        {{- include "manager.params" . | indent 8 }}
        {{- end }}
          env:
            - name: CONTROLLERS_ONLY
              value: "true"
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: GOMEMLIMIT
              valueFrom:
                resourceFieldRef:
                  containerName: manager
                  divisor: "0"
                  resource: limits.memory
            - name: GOMAXPROCS
              valueFrom:
                resourceFieldRef:
                  containerName: manager
                  divisor: "0"
                  resource: limits.cpu
          image: {{ .Values.controllerManager.image.repository }}:{{ .Values.controllerManager.image.tag | default .Chart.AppVersion }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 20
          name: manager
          ports:
            - containerPort: 8080
              name: metrics
            - containerPort: 8081
              name: probes
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
          securityContext: {{- toYaml .Values.controllerManager.containerSecurityContext | nindent 10 }}
      securityContext:
        runAsNonRoot: true
      serviceAccountName: {{ include "manager.fullname" . }}-controller-manager
      terminationGracePeriodSeconds: 10
