# SPDX-FileCopyrightText: 2024 SAP SE or an SAP affiliate company and Greenhouse contributors
# SPDX-License-Identifier: Apache-2.0

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.5
  name: clusterkubeconfigs.greenhouse.sap
spec:
  group: greenhouse.sap
  names:
    kind: ClusterKubeconfig
    listKind: ClusterKubeconfigList
    plural: clusterkubeconfigs
    shortNames:
    - cluster-kubeconfig
    - cluster-kubeconfigs
    singular: clusterkubeconfig
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: |-
          ClusterKubeconfig is the Schema for the clusterkubeconfigs API
          ObjectMeta.OwnerReferences is used to link the ClusterKubeconfig to the Cluster
          ObjectMeta.Generation is used to detect changes in the ClusterKubeconfig and sync local kubeconfig files
          ObjectMeta.Name is designed to be the same with the Cluster name
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              ClusterKubeconfigSpec stores the kubeconfig data for the cluster
              The idea is to use kubeconfig data locally with minimum effort (with local tools or plain kubectl):
              kubectl get cluster-kubeconfig $NAME -o yaml | yq -y .spec.kubeconfig
            properties:
              kubeconfig:
                description: |-
                  ClusterKubeconfigData stores the kubeconfig data ready to use kubectl or other local tooling
                  It is a simplified version of clientcmdapi.Config: https://pkg.go.dev/k8s.io/client-go/tools/clientcmd/api#Config
                properties:
                  apiVersion:
                    type: string
                  clusters:
                    items:
                      properties:
                        cluster:
                          properties:
                            certificate-authority-data:
                              format: byte
                              type: string
                            server:
                              type: string
                          type: object
                        name:
                          type: string
                      required:
                      - cluster
                      - name
                      type: object
                    type: array
                  contexts:
                    items:
                      properties:
                        context:
                          properties:
                            cluster:
                              type: string
                            namespace:
                              type: string
                            user:
                              type: string
                          required:
                          - cluster
                          - user
                          type: object
                        name:
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                  current-context:
                    type: string
                  kind:
                    type: string
                  preferences:
                    type: object
                  users:
                    items:
                      properties:
                        name:
                          type: string
                        user:
                          properties:
                            auth-provider:
                              description: AuthProviderConfig holds the configuration
                                for a specified auth provider.
                              properties:
                                config:
                                  additionalProperties:
                                    type: string
                                  type: object
                                name:
                                  type: string
                              required:
                              - name
                              type: object
                            client-certificate-data:
                              format: byte
                              type: string
                            client-key-data:
                              format: byte
                              type: string
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                type: object
            type: object
          status:
            properties:
              statusConditions:
                description: |-
                  A StatusConditions contains a list of conditions.
                  Only one condition of a given type may exist in the list.
                properties:
                  conditions:
                    items:
                      description: Condition contains additional information on the
                        state of a resource.
                      properties:
                        lastTransitionTime:
                          description: LastTransitionTime is the last time the condition
                            transitioned from one status to another.
                          format: date-time
                          type: string
                        message:
                          description: Message is an optional human readable message
                            indicating details about the last transition.
                          type: string
                        reason:
                          description: Reason is a one-word, CamelCase reason for
                            the condition's last transition.
                          type: string
                        status:
                          description: Status of the condition.
                          type: string
                        type:
                          description: Type of the condition.
                          type: string
                      required:
                      - lastTransitionTime
                      - status
                      - type
                      type: object
                    type: array
                    x-kubernetes-list-map-keys:
                    - type
                    x-kubernetes-list-type: map
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
