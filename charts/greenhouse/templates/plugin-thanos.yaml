apiVersion: greenhouse.sap/v1alpha1
kind: Plugin
metadata:
  name: thanos
  namespace: {{ .Chart.Name }}
spec:
  disabled: false
  optionValues:
    {{- if and .Values.global.quayIoMirror .Values.global.ghcrIoMirror .Values.global.dockerHubMirror }}
    - name: thanos.image.repository
      value: {{ printf "%s/thanos/thanos" .Values.global.quayIoMirror }}
    - name: thanos.initChownData.image.registry
      value: {{ .Values.global.dockerHubMirror }}
    - name: testFramework.image.registry
      value: {{ .Values.global.ghcrIoMirror }}
    {{- end }}
    - name: thanos.query.autoDownsampling
      value: true
    - name: thanos.query.standalone
      value: true
    - name: thanos.query.stores
      value:
      {{- range $index, $plugin := (lookup "greenhouse.sap/v1alpha1" "Plugin" "" "").items }}
        {{- if eq (get $plugin.metadata.labels "greenhouse.sap/plugindefinition") "thanos" }}
          {{- range $index, $option := $plugin.spec.optionValues }}
            {{- if eq $option.name "thanos.query.ingress.grpc.hosts" }}
        - {{ print (get (index (get $option "value") 0) "host") ":443" }}
            {{- end }}
          {{- end }}
        {{- end }}
      {{- end }}
    - name: thanos.ruler.enabled
      value: false
    - name: thanos.query.ingress.annotations
      value:
        disco: "true"
        kubernetes.io/tls-acme: "true"
    - name: thanos.query.ingress.enabled
      value: true
    - name: thanos.query.ingress.hosts
      value:
        - host: "thanos.{{ .Values.global.dnsDomain }}"
          paths:
            - path: /
              pathType: Prefix
    - name: thanos.query.ingress.ingressClassName
      value: nginx
    - name: thanos.query.ingress.tls
      value:
        - hosts:
            - "thanos.{{ .Values.global.dnsDomain }}"
          secretName: {{ printf "tls-%s" (print "thanos." .Values.global.dnsDomain | replace "." "-") }}
  pluginDefinition: thanos
