# SPDX-FileCopyrightText: 2024 SAP SE or an SAP affiliate company and Greenhouse contributors
# SPDX-License-Identifier: Apache-2.0

global:
  # The DNS domain to be used for all Greenhouse components.
  dnsDomain:
  dockerHubMirror:
  # OIDC configuration for Greenhouse.
  oidc:
    issuer:
    redirectURL:
    clientID:
    clientSecret:
  # DEX configuration for Greenhouse.
  dex:
    backend: postgres         # postgres or kubernetes
    postgresql:
      postgresqlDatabase:
      postgresqlPort:
      postgresqlUsername:

postgresqlng:
  enabled: true
  global:
    linkerd_enabled: false
    region: greenhouse
    # The registry where the image is stored
    registry:
  alerts:
    support_group: greenhouse
  resources: {}
  # The database that will be created in the database
  postgresDatabase: dex
  users:
    dex:         # The user that will be created in the database
      grant:         # The grants that will be given to the user
      - 'GRANT ALL PRIVILEGES ON DATABASE "%PGDATABASE%"'
  tableOwner:         # The owner of the tables in the database

# Organization & IDProxy should be enabled only after the initial install of greenhouse
organization:
  enabled: true
  oauth2ClientRedirectURIs:
    - "http://localhost:33768/auth/callback"
    - "http://localhost:8000"
    - "http://localhost:18000"
idproxy:
  enabled: true

scim:
  enabled: false
  # username:
  # password:

# Configures core Greenhouse teams.
teams:
  # An admin team must be specified. Additional teams are optional.
  # admin:
  #   description:
  #   mappedIdPGroup:

# demo organization
demo:
  enabled: false

### Configure several Plugins for the Greenhouse organization below.

# Toggle the installation of Plugins into the Greenhouse namespace
plugins:
  enabled: true

# Configures the DigiCert issuer for the Greenhouse organization,
# which enables obtaining DigiCert certificates via the cert-manager.
digicertIssuer:
  enabled: false
  apiToken:
  organizationID:
  organizationUnits:
  caCertID:

# Configures the DISCO, Designate Ingress CNAME operator, for the Greenhouse organization,
# which enables automated management of DNS records with OpenStack Designate.
disco:
  enabled: false
  record:
  zoneName:
  authURL:
  regionName:
  username:
  userDomainName:
  password:
  projectName:
  projectDomainName:

# Configures the NGINX ingress for the Greenhouse organization, which enables external access.
ingress:
  enabled: true
  # Specify the loadBalancer IP for the ingress service.
  # loadBalancerIP:

monitoring:
  enabled: false
  alertmanager:
    enabled: false

tailscale-proxy:
  enabled: true
  image:
    tag: 1.50.1
  preauthkeyProvosioner:
    image:
      tag: 0.2

alerts:
  enabled: false
  # Supernova options.
  endpoint:

  slack:
    channel:
    webhookURL:

  ingress:
    host:

  filterLabels:
    - app
    - service
    - severity
    - organization
  silenceExcludedLabels:
    - pod
    - pod_name
    - instance
  silenceTemplates: []

  predefinedFilters: []

  # Alertmanager options.
  alertmanager:
    # Whether to deploy the alertmanager.
    enabled: false

logshipping:
  enabled: false
  fluent-bit:
    image:
      repository: cr.fluentbit.io/fluent/fluent-bit
    hotReload:
      image:
        repository: ghcr.io/jimmidyson/configmap-reload

openTelemetry:
  enabled: false
# set via secrets
  #   region:
  #   cluster:
  #   openSearchLogs
  #     username:
  #     password:
  #     endpoint:
  logsCollector:
    enabled: true
  metricsCollector:
    enabled: true
  prometheus:
    podMonitor:
      enabled: true
    serviceMonitor:
      enabled: true
  admissionWebhooks:
    certManager:
      enabled: true
    autoGenerateCert:
      enabled: false
      recreate: false
  kubeRBACProxy:
    enabled: false
  manager:
    prometheusRule:
      defaultRules:
        enabled: false
      enabled: false
perses:
  enabled: true

plutono:
  enabled: true
