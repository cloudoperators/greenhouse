name: Build Docker images and push to registry

on:
  workflow_dispatch: {}
  push:
    branches:
        - main
    paths:
        - cmd/**
        - pkg/**
        - website/**
        - Dockerfile
        - Dockerfile.*
        - go.mod
        - go.sum
    tags:
      - v*.*.*
    
env:
  REGISTRY: ghcr.io

jobs:
  build:
    name: Build
    runs-on: [ ubuntu-latest ]
    continue-on-error: true
    strategy:
      fail-fast: false
      max-parallel: 6
      matrix:
        include:
          - Dockerfiles: Dockerfile
            Imagename: greenhouse
          - Dockerfiles: Dockerfile.dev-env
            Imagename: greenhouse-dev-env
          - Dockerfiles: Dockerfile.headscalectl
            Imagename: greenhouse-headscalectl
          - Dockerfiles: Dockerfile.tailscale
            Imagename: greenhouse-tailscale
          - Dockerfiles: Dockerfile.tcp-proxy
            Imagename: greenhouse-tcp-proxy

    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v3.7.0
        with:
          cosign-release: 'v2.2.3'
      
      # Set up QEMU for cross-platform builds
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3 # v3.0.0
        with:
          driver-opts: |
            image=moby/buildkit:latest

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5 # v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ matrix.Imagename }}
          tags: |
            type=semver,pattern={{version}},prefix=v
            type=semver,pattern={{major}}.{{minor}},prefix=v
            type=semver,pattern={{major}},enable=${{ !startsWith(github.ref, 'refs/tags/v0.') }},prefix=v
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr
            type=schedule
            type=raw,value=${{ github.sha }}
            type=sha,enable=true,format=short,prefix=
            type=edge,branch=master

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ${{ matrix.Dockerfiles }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
        #  cache-from: type=gha
        #  cache-to: type=gha,mode=max
          provenance: false
          platforms: |
            linux/amd64
            linux/arm64

      # Sign the resulting Docker image digest except on PRs.
      # This will only write to the public Rekor transparency log when the Docker
      # repository is public to avoid leaking data.  If you would like to publish
      # transparency data even for private images, pass --force to cosign below.
      # https://github.com/sigstore/cosign
      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          # https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-an-intermediate-environment-variable
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}

  vulnerability-scan:
    permissions:
      contents: read
      packages: read
      security-events: write
    strategy:
      fail-fast: false
      max-parallel: 6
      matrix:
        include:
          - Dockerfiles: Dockerfile
            Imagename: greenhouse
          - Dockerfiles: Dockerfile.dev-env
            Imagename: greenhouse-dev-env
          - Dockerfiles: Dockerfile.headscalectl
            Imagename: greenhouse-headscalectl
          - Dockerfiles: Dockerfile.tailscale
            Imagename: greenhouse-tailscale
          - Dockerfiles: Dockerfile.tcp-proxy
            Imagename: greenhouse-tcp-proxy

    name: Vulnerability Scan
    needs: build
    runs-on: [ ubuntu-latest ]
    steps:
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        if: success()
        with:
          image-ref: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ matrix.Imagename }}:${{ github.sha }}
          ignore-unfixed: true
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: trivy-results.sarif
