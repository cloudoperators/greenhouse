name: Deploy Hugo to GitHub Pages

on:
  workflow_dispatch: {}
  repository_dispatch:
    types: [trigger-workflow]
  push:
    branches:
      - main
    paths:
      - "docs/**"
      - "website/**"

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: [ ubuntu-latest ]

    env:
      HUGO_VERSION: 0.128.0

    steps:
      - name: Install Hugo CLI
        uses: peaceiris/actions-hugo@75d2e84710de30f6ff7268e08f310b60ef14033f #v3.0.0
        with:
          hugo-version: "latest"
          extended: true

      - name: Checkout greenhouse repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          repository: ${{ github.repository }}
          path: greenhouse
          submodules: true
          fetch-depth: 0

      - name: Checkout greenhouse-extensions repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          repository: ${{ github.repository_owner}}/greenhouse-extensions
          ref: ${{ github.event.client_payload.sha }}
          path: greenhouse-extensions
          submodules: true
          fetch-depth: 0

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@983d7736d9b0ae728b81ab479565c72886d7745b # v5

      - name: Custom steps
        env:
          GREENHOUSE_GIT_DIR: "${{ github.workspace }}/greenhouse"
          GREENHOUSE_EXTENSIONS_GIT_DIR: "${{ github.workspace }}/greenhouse-extensions"
          DESTINATION_DIR: "docs/reference/catalog"
        run: |
          cd $GREENHOUSE_GIT_DIR
          mkdir -p ${DESTINATION_DIR}

          echo "collecting PluginDefinition descriptions from ${GREENHOUSE_EXTENSIONS_GIT_DIR}"
          all_files=$(git -C $GREENHOUSE_EXTENSIONS_GIT_DIR grep --recursive --files-with-matches -e "kind: ClusterPluginDefinition" -- '*plugindefinition.yaml')

          for f in $all_files; do
            d=$(dirname $f)
            filename="${GREENHOUSE_EXTENSIONS_GIT_DIR}/${d}/README.md"
            if [[ ! -f $filename ]]; then
              continue
            fi

            img_dir="${GREENHOUSE_EXTENSIONS_GIT_DIR}/${d}/img"
            if [[ -d $img_dir ]]; then
              mkdir -p "${DESTINATION_DIR}/${d}/img"
              echo "copying images from ${img_dir} to ${DESTINATION_DIR}/${d}/img"
              cp -r $img_dir/*.png "${DESTINATION_DIR}/${d}/img"
            fi
            
            echo "copying ${GREENHOUSE_EXTENSIONS_GIT_DIR}/${d}/README.md" "${DESTINATION_DIR}/${d}.md";
            cp $filename "${DESTINATION_DIR}/${d}.md";
          done

      - name: Install postcss-cli and autoprefixer
        env:
          GREENHOUSE_GIT_DIR: "${{ github.workspace }}/greenhouse"
        run: cd ${{ env.GREENHOUSE_GIT_DIR }}/website && npm install postcss-cli autoprefixer

      - name: Build with Hugo
        env:
          GREENHOUSE_GIT_DIR: "${{ github.workspace }}/greenhouse"
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          cd $GREENHOUSE_GIT_DIR/website
          hugo mod clean
          hugo mod vendor
          hugo \
            --logLevel info \
            --gc \
            --minify \
            --baseURL "${{ steps.pages.outputs.base_url }}/"

      - name: Upload artifact
        uses: actions/upload-pages-artifact@7b1f4a764d45c48632c6b24a0339c27f5614fb0b # v4
        with:
          path: ./greenhouse/website/public/

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: [ ubuntu-latest ]
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@d6db90164ac5ed86f2b6aed7e0febac5b3c0c03e # v4
