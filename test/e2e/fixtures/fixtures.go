package fixtures

import (
	greenhousev1alpha1 "github.com/cloudoperators/greenhouse/pkg/apis/greenhouse/v1alpha1"
	"github.com/cloudoperators/greenhouse/pkg/test"
	apiextensionsv1 "k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

var NginxPluginDefinition = &greenhousev1alpha1.PluginDefinition{
	TypeMeta: metav1.TypeMeta{
		Kind:       "PluginDefinition",
		APIVersion: greenhousev1alpha1.GroupVersion.String(),
	},
	ObjectMeta: metav1.ObjectMeta{
		Name:      "nginx-18.1.7",
		Namespace: test.TestNamespace,
	},
	Spec: greenhousev1alpha1.PluginDefinitionSpec{
		Description: "nginx",
		HelmChart: &greenhousev1alpha1.HelmChartReference{
			Name:    "nginx",
			Version: "18.1.7",
		},
		Options: []greenhousev1alpha1.PluginOption{
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("false")},
				Description: "automountServiceAccountToken",
				Name:        "automountServiceAccountToken",
				Type:        "bool",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("false")},
				Description: "autoscaling.enabled",
				Name:        "autoscaling.enabled",
				Type:        "bool",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"\"")},
				Description: "autoscaling.maxReplicas",
				Name:        "autoscaling.maxReplicas",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"\"")},
				Description: "autoscaling.minReplicas",
				Name:        "autoscaling.minReplicas",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"\"")},
				Description: "autoscaling.targetCPU",
				Name:        "autoscaling.targetCPU",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"\"")},
				Description: "autoscaling.targetMemory",
				Name:        "autoscaling.targetMemory",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"\"")},
				Description: "cloneStaticSiteFromGit.branch",
				Name:        "cloneStaticSiteFromGit.branch",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"\"")},
				Description: "cloneStaticSiteFromGit.enabled",
				Name:        "cloneStaticSiteFromGit.enabled",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"\"")},
				Description: "cloneStaticSiteFromGit.extraEnvVarsSecret",
				Name:        "cloneStaticSiteFromGit.extraEnvVarsSecret",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"nano\"")},
				Description: "cloneStaticSiteFromGit.gitSync.resourcesPreset",
				Name:        "cloneStaticSiteFromGit.gitSync.resourcesPreset",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"\"")},
				Description: "cloneStaticSiteFromGit.image.digest",
				Name:        "cloneStaticSiteFromGit.image.digest",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"IfNotPresent\"")},
				Name:        "cloneStaticSiteFromGit.image.pullPolicy",
				Description: "cloneStaticSiteFromGit.image.pullPolicy",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"docker.io\"")},
				Description: "cloneStaticSiteFromGit.image.registry",
				Name:        "cloneStaticSiteFromGit.image.registry",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"bitnami/git\"")},
				Description: "cloneStaticSiteFromGit.image.repository",
				Name:        "cloneStaticSiteFromGit.image.repository",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"2.45.2-debian-12-r8\"")},
				Description: "cloneStaticSiteFromGit.image.tag",
				Name:        "cloneStaticSiteFromGit.image.tag",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("60")},
				Description: "cloneStaticSiteFromGit.interval",
				Name:        "cloneStaticSiteFromGit.interval",
				Type:        "int",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"\"")},
				Description: "cloneStaticSiteFromGit.repository",
				Name:        "cloneStaticSiteFromGit.repository",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"cluster.local\"")},
				Description: "clusterDomain",
				Name:        "clusterDomain",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("8080")},
				Description: "containerPorts.http",
				Name:        "containerPorts.http",
				Type:        "int",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("8443")},
				Description: "containerPorts.https",
				Name:        "containerPorts.https",
				Type:        "int",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("false")},
				Description: "containerSecurityContext.allowPrivilegeEscalation",
				Name:        "containerSecurityContext.allowPrivilegeEscalation",
				Type:        "bool",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"ALL\"")},
				Description: "containerSecurityContext.capabilities.drop.0",
				Name:        "containerSecurityContext.capabilities.drop.0",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("true")},
				Description: "containerSecurityContext.enabled",
				Name:        "containerSecurityContext.enabled",
				Type:        "bool",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("false")},
				Description: "containerSecurityContext.privileged",
				Name:        "containerSecurityContext.privileged",
				Type:        "bool",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("true")},
				Description: "containerSecurityContext.readOnlyRootFilesystem",
				Name:        "containerSecurityContext.readOnlyRootFilesystem",
				Type:        "bool",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("1001")},
				Description: "containerSecurityContext.runAsGroup",
				Name:        "containerSecurityContext.runAsGroup",
				Type:        "int",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("true")},
				Description: "containerSecurityContext.runAsGroup",
				Name:        "containerSecurityContext.runAsGroup",
				Type:        "int",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("1001")},
				Description: "containerSecurityContext.runAsUser",
				Name:        "containerSecurityContext.runAsUser",
				Type:        "bool",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("null")},
				Description: "containerSecurityContext.seLinuxOptions",
				Name:        "containerSecurityContext.seLinuxOptions",
				Type:        "list",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"RuntimeDefault\"")},
				Description: "containerSecurityContext.seccompProfile",
				Name:        "containerSecurityContext.seccompProfile",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"infinity\"")},
				Description: "diagnosticMode.args.0",
				Name:        "diagnosticMode.args.0",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"sleep\"")},
				Description: "diagnosticMode.command.0",
				Name:        "diagnosticMode.command.0",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("false")},
				Description: "diagnosticMode.enabled",
				Name:        "diagnosticMode.enabled",
				Type:        "bool",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"\"")},
				Description: "dnsPolicy",
				Name:        "dnsPolicy",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"\"")},
				Description: "existingServerBlockConfigmap",
				Name:        "existingServerBlockConfigmap",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"\"")},
				Description: "extraEnvVarsCM",
				Name:        "extraEnvVarsCM",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"\"")},
				Description: "extraEnvVarsSecret",
				Name:        "extraEnvVarsSecret",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"\"")},
				Description: "fullnameOverride",
				Name:        "fullnameOverride",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"auto\"")},
				Description: "global.compatibility.openshift.adaptSecurityContext",
				Name:        "global.compatibility.openshift.adaptSecurityContext",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"\"")},
				Description: "global.imageRegistry",
				Name:        "global.imageRegistry",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("false")},
				Description: "healthIngress.enabled",
				Name:        "healthIngress.enabled",
				Type:        "bool",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"example.local\"")},
				Description: "healthIngress.hostname",
				Name:        "healthIngress.hostname",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"\"")},
				Description: "healthIngress.ingressClassName",
				Name:        "healthIngress.ingressClassName",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"/\"")},
				Description: "healthIngress.path",
				Name:        "healthIngress.path",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"ImplementationSpecific\"")},
				Description: "healthIngress.pathType",
				Name:        "healthIngress.pathType",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("false")},
				Description: "healthIngress.selfSigned",
				Name:        "healthIngress.selfSigned",
				Type:        "bool",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("false")},
				Description: "healthIngress.tls",
				Name:        "healthIngress.tls",
				Type:        "bool",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("false")},
				Description: "hostIPC",
				Name:        "hostIPC",
				Type:        "bool",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("false")},
				Description: "hostNetwork",
				Name:        "hostNetwork",
				Type:        "bool",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("false")},
				Description: "image.debug",
				Name:        "image.debug",
				Type:        "bool",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"\"")},
				Description: "image.digest",
				Name:        "image.digest",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"IfNotPresent\"")},
				Description: "image.pullPolicy",
				Name:        "image.pullPolicy",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"docker.io\"")},
				Description: "image.registry",
				Name:        "image.registry",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"bitnami/nginx\"")},
				Description: "image.repository",
				Name:        "image.repository",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"1.27.0-debian-12-r5\"")},
				Description: "image.tag",
				Name:        "image.tag",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"\"")},
				Description: "ingress.apiVersion",
				Name:        "ingress.apiVersion",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("false")},
				Description: "ingress.enabled",
				Name:        "ingress.enabled",
				Type:        "bool",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"nginx.local\"")},
				Description: "ingress.hostname",
				Name:        "ingress.hostname",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"\"")},
				Description: "ingress.ingressClassName",
				Name:        "ingress.ingressClassName",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"/\"")},
				Description: "ingress.path",
				Name:        "ingress.path",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"ImplementationSpecific\"")},
				Description: "ingress.pathType",
				Name:        "ingress.pathType",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("false")},
				Description: "ingress.selfSigned",
				Name:        "ingress.selfSigned",
				Type:        "bool",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("false")},
				Description: "ingress.tls",
				Name:        "ingress.tls",
				Type:        "bool",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("false")},
				Description: "ingress.tlsWwwPrefix",
				Name:        "ingress.tlsWwwPrefix",
				Type:        "bool",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"\"")},
				Description: "kubeVersion",
				Name:        "kubeVersion",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("true")},
				Description: "livenessProbe.enabled",
				Name:        "livenessProbe.enabled",
				Type:        "bool",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("6")},
				Description: "livenessProbe.failureThreshold",
				Name:        "livenessProbe.failureThreshold",
				Type:        "int",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("30")},
				Description: "livenessProbe.initialDelaySeconds",
				Name:        "livenessProbe.initialDelaySeconds",
				Type:        "int",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("10")},
				Description: "livenessProbe.periodSeconds",
				Name:        "livenessProbe.periodSeconds",
				Type:        "int",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("1")},
				Description: "livenessProbe.successThreshold",
				Name:        "livenessProbe.successThreshold",
				Type:        "int",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("5")},
				Description: "livenessProbe.timeoutSeconds",
				Name:        "livenessProbe.timeoutSeconds",
				Type:        "int",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("9113")},
				Description: "metrics.containerPorts.metrics",
				Name:        "metrics.containerPorts.metrics",
				Type:        "int",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("false")},
				Description: "metrics.enabled",
				Name:        "metrics.enabled",
				Type:        "bool",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"\"")},
				Description: "metrics.image.digest",
				Name:        "metrics.image.digest",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"IfNotPresent\"")},
				Description: "metrics.image.pullPolicy",
				Name:        "metrics.image.pullPolicy",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"docker.io\"")},
				Description: "metrics.image.registry",
				Name:        "metrics.image.registry",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"bitnami/nginx-exporter\"")},
				Description: "metrics.image.repository",
				Name:        "metrics.image.repository",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"1.3.0-debian-12-r1\"")},
				Description: "metrics.image.tag",
				Name:        "metrics.image.tag",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"\"")},
				Description: "metrics.port",
				Name:        "metrics.port",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("false")},
				Description: "metrics.prometheusRule.enabled",
				Name:        "metrics.prometheusRule.enabled",
				Type:        "bool",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"\"")},
				Description: "metrics.prometheusRule.namespace",
				Name:        "metrics.prometheusRule.namespace",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"nano\"")},
				Description: "metrics.resourcesPreset",
				Name:        "metrics.resourcesPreset",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("false")},
				Description: "metrics.securityContext.enabled",
				Name:        "metrics.securityContext.enabled",
				Type:        "bool",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("1001")},
				Description: "metrics.securityContext.runAsUser",
				Name:        "metrics.securityContext.runAsUser",
				Type:        "int",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("null")},
				Description: "metrics.securityContext.seLinuxOptions",
				Name:        "metrics.securityContext.seLinuxOptions",
				Type:        "list",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("9113")}, //Values.metrics.service.port
				Description: "metrics.service.annotations.prometheus.io/port",
				Name:        "metrics.service.annotations.prometheus.io/port",
				Type:        "int",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("true")},
				Description: "metrics.service.annotations.prometheus.io/scrape",
				Name:        "metrics.service.annotations.prometheus.io/scrape",
				Type:        "bool",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("9113")},
				Description: "metrics.service.port",
				Name:        "metrics.service.port",
				Type:        "int",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("false")},
				Description: "metrics.serviceMonitor.enabled",
				Name:        "metrics.serviceMonitor.enabled",
				Type:        "bool",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("false")},
				Description: "metrics.serviceMonitor.honorLabels",
				Name:        "metrics.serviceMonitor.honorLabels",
				Type:        "bool",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"\"")},
				Description: "metrics.serviceMonitor.interval",
				Name:        "metrics.serviceMonitor.interval",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"\"")},
				Description: "metrics.serviceMonitor.jobLabel",
				Name:        "metrics.serviceMonitor.jobLabel",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"\"")},
				Description: "metrics.serviceMonitor.namespace",
				Name:        "metrics.serviceMonitor.namespace",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"\"")},
				Description: "metrics.serviceMonitor.scrapeTimeout",
				Name:        "metrics.serviceMonitor.scrapeTimeout",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"\"")},
				Description: "nameOverride",
				Name:        "nameOverride",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"\"")},
				Description: "namespaceOverride",
				Name:        "namespaceOverride",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("true")},
				Description: "networkPolicy.allowExternal",
				Name:        "networkPolicy.allowExternal",
				Type:        "bool",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("true")},
				Description: "networkPolicy.allowExternalEgress",
				Name:        "networkPolicy.allowExternalEgress",
				Type:        "bool",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("true")},
				Description: "networkPolicy.enabled",
				Name:        "networkPolicy.enabled",
				Type:        "bool",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"\"")},
				Description: "nodeAffinityPreset.key",
				Name:        "nodeAffinityPreset.key",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"\"")},
				Description: "nodeAffinityPreset.type",
				Name:        "nodeAffinityPreset.type",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("true")},
				Description: "pdb.create",
				Name:        "pdb.create",
				Type:        "bool",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"\"")},
				Description: "pdb.maxUnavailable",
				Name:        "pdb.maxUnavailable",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"\"")},
				Description: "pdb.minAvailable",
				Name:        "pdb.minAvailable",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"\"")},
				Description: "podAffinityPreset",
				Name:        "podAffinityPreset",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"soft\"")},
				Description: "podAffinityPreset",
				Name:        "podAffinityPreset",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("true")},
				Description: "podSecurityContext.enabled",
				Name:        "podSecurityContext.enabled",
				Type:        "bool",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("1001")},
				Description: "podSecurityContext.fsGroup",
				Name:        "podSecurityContext.fsGroup",
				Type:        "int",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"Always\"")},
				Description: "podSecurityContext.fsGroupChangePolicy",
				Name:        "podSecurityContext.fsGroupChangePolicy",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"\"")},
				Description: "priorityClassName",
				Name:        "priorityClassName",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("true")},
				Description: "readinessProbe.enabled",
				Name:        "readinessProbe.enabled",
				Type:        "bool",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("3")},
				Description: "readinessProbe.failureThreshold",
				Name:        "readinessProbe.failureThreshold",
				Type:        "int",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("5")},
				Description: "readinessProbe.initialDelaySeconds",
				Name:        "readinessProbe.initialDelaySeconds",
				Type:        "int",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"/\"")},
				Description: "readinessProbe.path",
				Name:        "readinessProbe.path",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("5")},
				Description: "readinessProbe.periodSeconds",
				Name:        "readinessProbe.periodSeconds",
				Type:        "int",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("1")},
				Description: "readinessProbe.successThreshold",
				Name:        "readinessProbe.successThreshold",
				Type:        "int",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("3")},
				Description: "readinessProbe.timeoutSeconds",
				Name:        "readinessProbe.timeoutSeconds",
				Type:        "int",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("1")},
				Description: "replicaCount",
				Name:        "replicaCount",
				Type:        "int",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"nano\"")},
				Description: "resourcesPreset",
				Name:        "resourcesPreset",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("10")},
				Description: "revisionHistoryLimit",
				Name:        "revisionHistoryLimit",
				Type:        "int",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"\"")},
				Description: "schedulerName",
				Name:        "schedulerName",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"\"")},
				Description: "serverBlock",
				Name:        "serverBlock",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"\"")},
				Description: "service.clusterIP",
				Name:        "service.clusterIP",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"Cluster\"")},
				Description: "service.externalTrafficPolicy",
				Name:        "service.externalTrafficPolicy",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"\"")},
				Description: "service.loadBalancerClass",
				Name:        "service.loadBalancerClass",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"\"")},
				Description: "service.loadBalancerIP",
				Name:        "service.loadBalancerIP",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"\"")},
				Description: "service.nodePorts.http",
				Name:        "service.nodePorts.http",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"\"")},
				Description: "service.nodePorts.https",
				Name:        "service.nodePorts.https",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("80")},
				Description: "service.ports.http",
				Name:        "service.ports.http",
				Type:        "int",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("443")},
				Description: "service.ports.https",
				Name:        "service.ports.https",
				Type:        "int",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"None\"")},
				Description: "service.sessionAffinity",
				Name:        "service.sessionAffinity",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"http\"")},
				Description: "service.targetPort.http",
				Name:        "service.targetPort.http",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"https\"")},
				Description: "service.targetPort.https",
				Name:        "service.targetPort.https",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"LoadBalancer\"")},
				Description: "service.type",
				Name:        "service.type",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("false")},
				Description: "serviceAccount.automountServiceAccountToken",
				Name:        "serviceAccount.automountServiceAccountToken",
				Type:        "bool",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("true")},
				Description: "serviceAccount.create",
				Name:        "serviceAccount.create",
				Type:        "bool",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"\"")},
				Description: "serviceAccount.name",
				Name:        "serviceAccount.name",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("false")},
				Description: "sidecarSingleProcessNamespace",
				Name:        "sidecarSingleProcessNamespace",
				Type:        "bool",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("false")},
				Description: "startupProbe.enabled",
				Name:        "startupProbe.enabled",
				Type:        "bool",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("6")},
				Description: "startupProbe.failureThreshold",
				Name:        "startupProbe.failureThreshold",
				Type:        "int",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("30")},
				Description: "startupProbe.initialDelaySeconds",
				Name:        "startupProbe.initialDelaySeconds",
				Type:        "int",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("10")},
				Description: "startupProbe.periodSeconds",
				Name:        "startupProbe.periodSeconds",
				Type:        "int",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("1")},
				Description: "startupProbe.successThreshold",
				Name:        "startupProbe.successThreshold",
				Type:        "int",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("5")},
				Description: "startupProbe.timeoutSeconds",
				Name:        "startupProbe.timeoutSeconds",
				Type:        "int",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"\"")},
				Description: "staticSiteConfigmap",
				Name:        "staticSiteConfigmap",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"\"")},
				Description: "staticSitePVC",
				Name:        "staticSitePVC",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"\"")},
				Description: "terminationGracePeriodSeconds",
				Name:        "terminationGracePeriodSeconds",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"\"")},
				Description: "terminationGracePeriodSeconds",
				Name:        "terminationGracePeriodSeconds",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("true")},
				Description: "tls.autoGenerated",
				Name:        "tls.autoGenerated",
				Type:        "bool",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"\"")},
				Description: "tls.ca",
				Name:        "tls.ca",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"\"")},
				Description: "tls.cert",
				Name:        "tls.cert",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"ca.crt\"")},
				Description: "tls.certCAFilename",
				Name:        "tls.certCAFilename",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"tls.crt\"")},
				Description: "tls.certFilename",
				Name:        "tls.certFilename",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"tls.key\"")},
				Description: "tls.certKeyFilename",
				Name:        "tls.certKeyFilename",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("true")},
				Description: "tls.enabled",
				Name:        "tls.enabled",
				Type:        "bool",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"\"")},
				Description: "tls.existingSecret",
				Name:        "tls.existingSecret",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"\"")},
				Description: "tls.key",
				Name:        "tls.key",
				Type:        "string",
			},
			{
				Default:     &apiextensionsv1.JSON{Raw: []byte("\"RollingUpdate\"")},
				Description: "updateStrategy.type",
				Name:        "updateStrategy.type",
				Type:        "string",
			},
		},
		UIApplication: &greenhousev1alpha1.UIApplicationReference{
			Name:    "nginx",
			URL:     "TODO: Javascript asset server URL.",
			Version: "latest",
		},
	},
}
